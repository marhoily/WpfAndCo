<#@ template language="C#" #>
using System;
using System.ComponentModel.DataAnnotations;

namespace Sample.Generated {
    public sealed class Create<#=_type.Name#>Validator : IValidator<Create<#=_type.Name#>>
    {
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
		private readonly <#= property.ClrType.Name #>Aggregate _<#= property.Name #>Aggregate;
<#
        
    }
#>	
		public Create<#=_type.Name#>Validator(
			<#=_type.NavigationProperties.Join(property 
				=> $"{property.ClrType.Name}Aggregate {property.Name}Aggregate") #>)
		{
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
			_<#= property.Name #>Aggregate = <#= property.Name #>Aggregate;
<#
        
    }
#>	
		}
		public ValidationResult Validate(Create<#=_type.Name#> commit)
		{
<#
    foreach (var p in _type.NavigationProperties)
    {
		if (!p.IsRequired)
		{
#>
			if (commit.<#=p.Name#> != Guid.Empty)
<#
		}
#>
			if (!_<#=p.Name#>Aggregate.ById.ContainsKey(commit.<#=p.Name#>))
				return new ValidationResult(
					"Wrong <#=p.Name#>: " + commit.<#=p.Name#>);
<#
    }
#>		
			return ValidationResult.Success;
		}
    }
}

<#+
    private readonly MetaType _type;
#>