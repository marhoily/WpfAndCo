<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System.ComponentModel.DataAnnotations;

namespace Sample.Generated {
    public sealed class Create<#= _type.ClrType.Name #>Validator
    {
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
		private readonly Create<#= property.ClrType.Name #>Aggregate _create<#= property.ClrType.Name #>Aggregate;
<#
        
    }
#>	
		public Create<#= _type.ClrType.Name #>Validator(
			<#=_type.NavigationProperties.Join(property 
				=> $"Create{property.ClrType.Name}Aggregate create{property.ClrType.Name}Aggregate") #>)
		{
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
			_create<#= property.ClrType.Name #>Aggregate = create<#= property.ClrType.Name #>Aggregate;
<#
        
    }
#>	
		}
		public ValidationResult Validate(Create<#= _type.ClrType.Name #> commit)
		{
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
			if (!_create<#= property.ClrType.Name #>Aggregate.ById.ContainsKey(commit.<#= property.Name #>))
				return new ValidationResult("Wrong <#= property.ClrType.Name #>: " + commit.<#= property.ClrType.Name #>);
<#
    }
#>		
			return ValidationResult.Success;
		}
    }
}

<#+
    private readonly EntityType _type;
#>