<#@ template language="C#" #>
using System;
using AutoMapper;
using Sample;

namespace Sample.Generated {
    public sealed class Create<#=_type.Name#>Handler : IHandler<Create<#=_type.Name#>>
    {
        private static readonly IMapper Mapper = 
            new MapperConfiguration(cfg =>
            {
                cfg.CreateMap<Create<#=_type.Name#>, <#=_type.Name#>Row>();
            })
            .CreateMapper();
		private readonly <#=_type.Name#>Aggregate _aggregate;

		public Create<#=_type.Name#>Handler(
			<#=_type.Name#>Aggregate aggregate)
		{
			_aggregate = aggregate;
		}
		public void Handle(Create<#=_type.Name#> commit)
		{
			_aggregate.ById.Add(commit.Id,
                Mapper.Map<<#=_type.Name#>Row>(commit));
		}
    }
}

<#+
    private readonly MetaType _type;
#>