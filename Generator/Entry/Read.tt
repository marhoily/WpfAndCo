<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.Data.Entity" #>
using System.Collections.Generic;
using System.IO;

namespace Sample.Generated {
public partial class Raw {
    partial class <#= _type.ClrType.Name #>
    {
        public static <#= _type.ClrType.Name #> Read(BinaryReader reader) 
        {
<#
	foreach (var prop in _type.GetProperties())
	{
#>
		    var <#= prop.Name #> = reader.Read<#= prop.ClrType.Name #>();
<#
	}
#>
            return new <#= _type.ClrType.Name #>(
                <#= _type.GetPropertiesParametersList() #>);
        }

        public void ReadChanges(BinaryReader reader) 
        {
            var changes = reader.ReadEnum<F>();
<#
	foreach (var prop in _type.GetProperties())
        if (!prop.IsPrimaryKey())
	    {
#>
            if (changes.HasFlag(F.<#= prop.Name #>))
                <#= prop.Name #> = reader.Read<#= prop.ClrType.Name #>();
<#
	    }
#>
        }
    }
}}

