<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.Data.Entity" #>
using System.IO;

namespace Sample.Generated {
public partial class Raw {
    public sealed partial class <#= _type.ClrType.Name #>
    {
        private <#= _type.ClrType.Name #> _original;

        public <#= _type.ClrType.Name #> Clone()
        {
            return new <#= _type.ClrType.Name #>(
                <#= _type.GetPropertiesParametersList() #>);
        }
        private void EnsureOriginal()
        {
            if (_original == null) _original = Clone();
        }

        public F GetChanged(BinaryWriter writer, <#= _type.ClrType.Name #> old) 
        {
            F changed = 0;
<#
	foreach (var prop in _type.GetProperties())
        if (!prop.IsPrimaryKey())
	    {
#>
            if (old.<#= prop.Name #> != <#= prop.Name #>)
                changed |= F.<#= prop.Name #>;
<#
	    }
#>
            return changed;
        }
    }
}}

