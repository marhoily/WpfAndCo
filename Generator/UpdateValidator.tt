<#@ template language="C#" #>
using System;
using System.ComponentModel.DataAnnotations;

namespace Sample.Generated {
    [IoC]
    public sealed class Update<#=_type.Name#>Validator : IValidator<Update<#=_type.Name#>Command>
    {
<#
		//    ________
		//___/ Fields \________________________________________
#>
		private readonly <#=_type.Name#>Aggregate <#=_type.Name.AsField()#>Aggregate;
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
		private readonly <#=property.ClrType.Name#>Aggregate <#=property.Name.AsField()#>Aggregate;
<#
    }
		//    _____________
		//___/ Constructor \___________________________________
#>	
		public Update<#=_type.Name#>Validator(
			<#=_type.Name#>Aggregate <#=_type.Name.AsLocal()#>Aggregate
<#
    foreach (var p in _type.NavigationProperties)
    {
#>
			,<#=p.ClrType.Name#>Aggregate <#=p.Name.AsLocal()#>Aggregate
<#
    }
#>)
		{
			<#=_type.Name.AsField()#>Aggregate = <#=_type.Name.AsLocal()#>Aggregate;
<#
    foreach (var p in _type.NavigationProperties)
    {
#>
			<#=p.Name.AsField()#>Aggregate = <#=p.Name.AsLocal()#>Aggregate;
<#
        
    }
#>	
		}
<#
		//    ____________
		//___/ Validate() \____________________________________
#>
		public ValidationResult Validate(Update<#=_type.Name#>Command command)
		{
			var row = <#=_type.Name.AsField()#>Aggregate.Get(command.Id);
			if (row == null)
				return new ValidationResult("Did not find <#=_type.Name#> to be updated: " + command.Id);
			if (row.RowVersion != command.RowVersion)
				return new ValidationResult($"Can't update object v.{row.RowVersion} with command v.{command.RowVersion}");
				
<#
    foreach (var p in _type.NavigationProperties)
    {
		if (!p.IsRequired)
		{
#>
			if (command.<#=p.Name#> != Guid.Empty)
<#
		}
#>
			if (<#=p.Name.AsField()#>Aggregate.Get(command.<#=p.Name#>) == null)
				return new ValidationResult("Wrong <#=p.Name#>: " + command.<#=p.Name#>);
<#
    }
#>		
			return ValidationResult.Success;
		}
    }
}

<#+
    private readonly MetaType _type;
#>