<#@ template language="C#" #>
using System.ComponentModel.DataAnnotations;

namespace Sample.Generated {
    public sealed class Update<#= _type.ClrType.Name #>Validator
    {
		private readonly <#= _type.ClrType.Name #>Aggregate _<#= _type.ClrType.Name #>Aggregate;
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
		private readonly <#= property.ClrType.Name #>Aggregate _<#= property.ClrType.Name #>Aggregate;
<#
        
    }
#>	
		public Update<#= _type.ClrType.Name #>Validator(
			<#= _type.ClrType.Name #>Aggregate <#= _type.ClrType.Name #>Aggregate
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
			,<#= property.ClrType.Name #>Aggregate <#= property.ClrType.Name #>Aggregate
<#
        
    }
#>)
		{
			_<#= _type.ClrType.Name #>Aggregate = <#= _type.ClrType.Name #>Aggregate;
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
			_<#= property.ClrType.Name #>Aggregate = <#= property.ClrType.Name #>Aggregate;
<#
        
    }
#>	
		}
		public ValidationResult Validate(Update<#= _type.ClrType.Name #> commit)
		{
			if (!_<#= _type.ClrType.Name #>Aggregate.ById.ContainsKey(commit.Id))
				return new ValidationResult("Did not find <#= _type.ClrType.Name #> to be updated: " + commit.Id);
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
			if (!_<#= property.ClrType.Name #>Aggregate.ById.ContainsKey(commit.<#= property.Name #>))
				return new ValidationResult("Wrong <#= property.ClrType.Name #>: " + commit.<#= property.ClrType.Name #>);
<#
    }
#>		
			return ValidationResult.Success;
		}
    }
}

<#+
    private readonly EntityType _type;
#>