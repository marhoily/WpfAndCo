<#@ template language="C#" #>
using System;
using System.ComponentModel.DataAnnotations;

namespace Sample.Generated {
    public sealed class Update<#=_type.Name#>Validator
    {
		private readonly <#=_type.Name#>Aggregate _<#= _type.Name #>Aggregate;
<#
    foreach (var property in _type.NavigationProperties)
    {
#>
		private readonly <#= property.ClrType.Name #>Aggregate _<#= property.Name #>Aggregate;
<#
    }
#>	
		public Update<#=_type.Name#>Validator(
			<#=_type.Name#>Aggregate <#=_type.Name#>Aggregate
<#
    foreach (var p in _type.NavigationProperties)
    {
#>
			,<#= p.ClrType.Name #>Aggregate <#=p.Name#>Aggregate
<#
    }
#>)
		{
			_<#=_type.Name#>Aggregate = <#=_type.Name#>Aggregate;
<#
    foreach (var p in _type.NavigationProperties)
    {
#>
			_<#=p.Name#>Aggregate = <#=p.Name#>Aggregate;
<#
        
    }
#>	
		}
		public ValidationResult Validate(Update<#=_type.Name#> commit)
		{
			<#=_type.Name#>Row row;
			if (!_<#=_type.Name#>Aggregate.ById.TryGetValue(commit.Id, out row))
				return new ValidationResult("Did not find <#=_type.Name#> to be updated: " + commit.Id);
			if (row.RowVersion != commit.RowVersion)
				return new ValidationResult($"Can't update object v.{row.RowVersion} with commit v.{commit.RowVersion}");
				
<#
    foreach (var p in _type.NavigationProperties)
    {
		if (!p.IsRequired)
		{
#>
			if (commit.<#=p.Name#> != Guid.Empty)
<#
		}
#>
			if (!_<#=p.Name#>Aggregate.ById.ContainsKey(commit.<#=p.Name#>))
				return new ValidationResult("Wrong <#=p.Name#>: " + commit.<#=p.Name#>);
<#
    }
#>		
			return ValidationResult.Success;
		}
    }
}

<#+
    private readonly MetaType _type;
#>