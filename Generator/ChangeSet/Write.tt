<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace Sample.Generated {
public partial class Raw {
    partial class ChangeSet
    {
        public void WriteInserts(BinaryWriter writer)
        {
			writer.Write(_inserts.Count);
			foreach (var item in _inserts)
				item.WriteAllProperties(writer);
        }                              
        public void WriteUpdates(BinaryWriter writer)
        {
<#
	foreach (var type in _model.GetEntityTypes())
	{
#>
			{
				var modified = Pk<#= type.ClrType.Name #>.Values
					.Where(item => item.IsModified).ToList();
				if (modified.Count > 0)
				{
					writer.WriteEnum(E.<#= type.ClrType.Name #>);
					foreach (var item in modified)
						item.WriteChangedProperties(writer);
				}
			}
<#
	}
#>
			writer.Write(0);
        }                             
        public void WriteDeletes(BinaryWriter writer)
        {
			writer.Write(_removes.Count);
			foreach (var item in _removes)
				item.WriteKey(writer);
        }
    }
}}

